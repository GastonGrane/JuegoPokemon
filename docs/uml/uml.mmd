%% Quedó precioso, ya sé
classDiagram
   accTitle: Diagrama de Clases Proyecto Final

   class Pokemon {
     -health: int
     -attacks: List~Attack~

     +ActiveEffect: IEffect?
     +Name: string
     +Type: PokemonType
     +MaxHealth: int
     +Health: int
     +CanAttack: bool
     +Attacks: ReadOnlyCollection~Attack~

     +Pokemon(string name, PokemonType type, int maxHealth, List~Attack~ attacks)
     +Pokemon(Pokemon pokemon)
     +Attack(Pokemon target, int attackIdx): void
     +Attack(Pokemon target, string attackName): void
     +Heal(int health): void
     +Damage(int health): void
     +ApplyEffect(IEffect effect): void
     +UpdateEffect(IEffect effect): void
     +RemoveEffect(IEffect effect): void
     -Attack(Pokemon target, Attack attack): bool
     -GetAttack(string attackName): Attack
     -GetAttack(int attackIdx): Attack
   }

   Pokemon "1" *-- "0..*" PokemonType
   Pokemon "1" *-- "1" IEffect
   Pokemon "1..4" o-- "1" Attack

   <<enumeration>> PokemonType
   class PokemonType {
     Normal
     Fire
     Water
     Electric
     Grass
     Ice
     Fighting
     Poison
     Ground
     Flying
     Psychic
     Bug
     Rock
     Ghost
     Dragon

     +Advantage(Element other) double
   }

   <<interface>> IEffect
   class IEffect {
     +IsExpired: bool

     +UpdateEffect(Pokemon target)
     +RemoveEffect(Pokemon target)
   }

   class Burn {
     +IsExpired: bool

     +UpdateEffect(Pokemon target)
     +RemoveEffect(Pokemon target)
   }
   Burn ..|> IEffect

   class Poison {
     +IsExpired: bool

     +UpdateEffect(Pokemon target)
     +RemoveEffect(Pokemon target)
   }
   Poison ..|> IEffect

   class Sleep {
     +IsExpired: bool

     +UpdateEffect(Pokemon target)
     +RemoveEffect(Pokemon target)
   }
   Sleep ..|> IEffect

   class Paralysis {
     +IsExpired: bool

     +UpdateEffect(Pokemon target)
     +RemoveEffect(Pokemon target)
   }
   Paralysis ..|> IEffect

   <<abstract>> Attack
   class Attack {
     +Name: string
     +Damage: int
     +Type: PokemonType
     +Precision: int

     #Attack(string name, int damage, PokemonType type, int precision)
     #Attack(Attack attack)
   }
   Attack "1" *-- "0..*" PokemonType

   class NormalAttack {
     +Name: string
     +Damage: int
     +Type: PokemonType
     +Precision: int

     #NormalAttack(string name, int damage, PokemonType type, int precision)
     #NormalAttack(NormalAttack normalAttack)
   }
   NormalAttack "1" *-- "0..*" PokemonType
   NormalAttack


   class Player {
     +Name: string
     +Pokemon: List~IPokemon~
     +ActivePokemon: int

     +ChangePokemon(string newPokemon) bool
     +Attack(Player other, string attackName) bool
     +IsDead() bool
   }
   Player "6" *-- "0..*" IPokemon
